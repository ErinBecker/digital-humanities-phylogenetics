dtm_df$num_entries = rowSums(dtm_df)
dtm_df["num_occurances",] = colSums(dtm_df)
dtm_df["num_occurances","num_entries"] = NA
plot(density(dtm_df$num_entries, na.rm = TRUE))
table(dtm_df$num_entries) #number of documents with each number of entries
length(which(dtm_df$num_entries >= 10))
length(which(dtm_df$num_entries >= 100))
setwd("Box Sync/digital-humanities-phylogenetics/data")
getwd()
setwd("../data")
dtm_df = read.table("dtm_df.csv", sep = ",", header = TRUE, row.names = 1)
dtm_df$num_entries = rowSums(dtm_df)
dtm_df["num_occurances",] = colSums(dtm_df)
dtm_df["num_occurances","num_entries"] = NA
plot(density(dtm_df$num_entries, na.rm = TRUE))
table(dtm_df$num_entries) #number of documents with each number of entries
?table
?"["
head(dist(iris[, 3:4])
)
str(iris)
?dist
#install.packages("ggdendro")
install.packages("ggdendro")
library(ggdendro)
?read.table
unique(iris$Species)
stuff = c("pig", "cow", "horse", "snake", "bunny")
plot(c(1:5))
plot(c(1:5), pch = stuff)
plot(c(1:5), pch = as.factor(stuff))
plot.new()
plot.window(xlim=c(1,10), ylim=c(1,10))
text(x=1:10, y=1:10, labels="Hallo")
?text
text(x = 1:5, y = 1:5, labels = stuff)
text(x = 1:5, y = 1:5, labels = stuff)
plot.new()
plot.window(xlim=c(1,10), ylim=c(1,10))
text(x = 1:5, y = 1:5, labels = stuff)
plot.new()
plot.window(xlim=c(1,10), ylim=c(1,10))
text(x = 1:5, y = 1:5, labels = stuff, cex = 0.5)
source('~/Google Drive (erinstellabecker@gmail.com)/SWC-DC/InstructorTraining/Strategy_for_instructor_training/Email-scripts/sendmail_certificates_sep.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
requests = read.csv("../data/training-data/training_requests_2017-04-05.csv")
requests = read.csv("../data/training-data/training_requests_2017-04-05.csv")
str(requests)
summary(requests)
requests = read.csv("../data/training-data/training_requests_2017-04-05.csv")
table(requests$Expertise.areas)
library("digest", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("digest", lib.loc="~/Library/R/3.3/library")
install.packages("digest", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
.libPaths()
library(ggplot2)
library(ggplot)
library("ggplot2", lib.loc="~/Library/R/3.3/library")
install.packages("ggplot2")
library(ggplot2)
library("ggplot2", lib.loc="~/Library/R/3.3/library")
install.packages("ggplot2", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggplot2)
from ggplot import *
ggplot(aes(x='date', y='beef'), data=meat) +\
geom_line() +\
stat_smooth(colour='blue', span=0.2)
ggplot(aes(x='date', y='beef'), data=meat) +
geom_line() +
stat_smooth(colour='blue', span=0.2)
install.packages("ggplot2")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggplot2")
str(cars)
str(iris)
head(iris)
library("ggplot2", lib.loc="~/Library/R/3.3/library")
?ggplot2
str(iris)
ggplot(data = iris, aes(y = Sepal.Width, x = Petal.Lenght))
ggplot(data = iris, aes(y = Sepal.Width, x = Petal.Length))
+ geom_points()
+ geom_point()
ggplot(data = iris, aes(y = Sepal.Width, x = Petal.Length)) + geom_point()
Q39_sections = read.csv("Q000039_sections.csv", stringsAsFactors = FALSE)
setwd("/Users/ebecker/Box Sync/digital-humanities-phylogenetics/data/composite_texts/")
Q39_sections = read.csv("Q000039_sections.csv", stringsAsFactors = FALSE)
ob_lists_wood_w_id_text = read.csv("../ob_lists_wood_w_id_text.csv")
ob_lists_wood_w_id_text$X = NULL
doc_list = unique(ob_lists_wood_w_id_text$id_text)
section_names = colnames(Q39_sections)
section_matrix = data.frame(sapply(doc_list, function(x) x = logical(length(section_names))), row.names = section_names)
colnames(section_matrix) = doc_list
doc_list = as.character(doc_list)
for (j in unique(doc_list)) {
entries = as.character(ob_lists_wood_w_id_text[which(ob_lists_wood_w_id_text$id_text == j),]$entry)
for (i in 1:ncol(Q39_sections)) {
presence = sum(Q39_sections[,i] %in% tolower(entries))
if (presence > 0) presence = 1
section_matrix[i, j] = presence
}
section_matrix
}
library(ggplot2)
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5))
qplot(data = melted_df, x = section_name, y = variable, fill = factor(value),
geom = "tile") + scale_fill_manual(values=c("0"="lightblue", "1"="red")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 1), axis.text.y = element_text(size = 3))
install.packages("superheat")
section_matrix$section_name = row.names(section_matrix)
install.packages("reshape")
library(reshape)
melted_df = melt(section_matrix)
head(melted_df)
for (i in 1:nrow(melted_df)) {
if(melted_df$value[i] > 0) melted_df$value[i] = 1
}
library(ggplot2)
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5))
qplot(data = melted_df, x = section_name, y = variable, fill = factor(value),
geom = "tile") + scale_fill_manual(values=c("0"="lightblue", "1"="red")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 1), axis.text.y = element_text(size = 3))
Q1_sections = read.csv("Q000001_sections.csv")
Q39_sections = read.csv("Q000039_sections.csv", stringsAsFactors = FALSE)
Q40_sections = read.csv("Q000040_sections.csv")
Q41_sections = read.csv("Q000040_sections.csv")
Q42_sections = read.csv("Q000042_sections.csv")
####### Read in documents dealing with trees and wooden objects #######
ob_lists_wood_w_id_text = read.csv("../ob_lists_wood_w_id_text.csv")
ob_lists_wood_w_id_text$X = NULL
# make df to store results
doc_list = unique(ob_lists_wood_w_id_text$id_text)
section_names = colnames(Q39_sections)
section_matrix = data.frame(sapply(doc_list, function(x) x = logical(length(section_names))), row.names = section_names)
colnames(section_matrix) = doc_list
doc_list = as.character(doc_list)
for (j in unique(doc_list)) {
entries = as.character(ob_lists_wood_w_id_text[which(ob_lists_wood_w_id_text$id_text == j),]$entry)
for (i in 1:ncol(Q39_sections)) {
presence = sum(Q39_sections[,i] %in% tolower(entries))
if (presence > 0) presence = 1
section_matrix[i, j] = presence
}
section_matrix
}
section_matrix$section_name = row.names(section_matrix)
library(reshape)
melted_df = melt(section_matrix)
head(melted_df)
melted_df_binary = melted_df
for (i in 1:nrow(melted_df_binary)) {
if (melted_df_binary$value[i] > 0) melted_df_binary$value[i] = 1
}
library(ggplot2)
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5))
unique(melted_df$value)
ob_lists_wood_w_id_text = read.csv("../ob_lists_wood_w_id_text.csv")
ob_lists_wood_w_id_text$X = NULL
# make df to store results
doc_list = unique(ob_lists_wood_w_id_text$id_text)
section_names = colnames(Q39_sections)
section_matrix = data.frame(sapply(doc_list, function(x) x = logical(length(section_names))), row.names = section_names)
colnames(section_matrix) = doc_list
doc_list = as.character(doc_list)
for (j in unique(doc_list)) {
entries = as.character(ob_lists_wood_w_id_text[which(ob_lists_wood_w_id_text$id_text == j),]$entry)
for (i in 1:ncol(Q39_sections)) {
presence = sum(Q39_sections[,i] %in% tolower(entries))
#    if (presence > 0) presence = 1
section_matrix[i, j] = presence
}
section_matrix
}
section_matrix$section_name = row.names(section_matrix)
library(reshape)
melted_df = melt(section_matrix)
head(melted_df)
melted_df_binary = melted_df
for (i in 1:nrow(melted_df_binary)) {
if (melted_df_binary$value[i] > 0) melted_df_binary$value[i] = 1
}
library(ggplot2)
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 5))
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 1), axis.text.y = element_text(size = 3))
qplot(data = melted_df_binary, x = section_name, y = variable, fill = factor(value),
geom = "tile") + scale_fill_manual(values = c("0"="lightblue", "1"="red")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 1), axis.text.y = element_text(size = 3))
library(ggplot2)
ggplot(data = melted_df, aes(y = variable, x = section_name)) +
geom_tile(aes(fill = value)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 3), axis.text.y = element_text(size = 3))
qplot(data = melted_df_binary, x = section_name, y = variable, fill = factor(value),
geom = "tile") + scale_fill_manual(values = c("0"="lightblue", "1"="red")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 3), axis.text.y = element_text(size = 3))
